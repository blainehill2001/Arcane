[{"/Users/blainehill/Desktop/Arcane/ui/src/index.js":"1","/Users/blainehill/Desktop/Arcane/ui/src/App.js":"2","/Users/blainehill/Desktop/Arcane/ui/src/Welcome.js":"3","/Users/blainehill/Desktop/Arcane/ui/src/CreatePlaylist.js":"4","/Users/blainehill/Desktop/Arcane/ui/src/DisplayRecommendations.js":"5","/Users/blainehill/Desktop/Arcane/ui/src/DisplaySeeds.js":"6","/Users/blainehill/Desktop/Arcane/ui/src/SearchTrack.js":"7"},{"size":391,"mtime":1620450645756,"results":"8","hashOfConfig":"9"},{"size":4001,"mtime":1621323329555,"results":"10","hashOfConfig":"9"},{"size":1732,"mtime":1621320514140,"results":"11","hashOfConfig":"9"},{"size":2809,"mtime":1621315914140,"results":"12","hashOfConfig":"9"},{"size":3535,"mtime":1621142297209,"results":"13","hashOfConfig":"9"},{"size":2345,"mtime":1621204327270,"results":"14","hashOfConfig":"9"},{"size":4465,"mtime":1621287383507,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"hybr8h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/blainehill/Desktop/Arcane/ui/src/index.js",["37","38"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","/Users/blainehill/Desktop/Arcane/ui/src/App.js",["39","40","41","42","43","44","45","46","47","48"],"import React, { useEffect, useState } from \"react\";\nimport Welcome from './Welcome';\nimport SearchTrack from './SearchTrack';\nimport DisplaySeeds from './DisplaySeeds';\nimport DisplayRecommendations from './DisplayRecommendations';\nimport CreatePlaylist from './CreatePlaylist'\nimport Cookies from \"js-cookie\";\nimport hallowed_background from \"./assets/Hollowed-Boxes.svg\"\nimport './App.css'; \nvar _ = require('underscore');\n\n\n\n\nfunction App() {\n\n  const[seedTracks, setSeedTracks] = useState([]);\n  const[recommendations, setRecommendations] = useState([]);\n  const token_key = 'arcane-token-key';\n  const[hasLoggedIn, setHasLoggedIn] = useState(false);\n  const[background, setBackground] = useState(\"\");\n\n  const updateSeeds = (trackArray, newTrack) => {\n    trackArray.push(newTrack);\n    setSeedTracks([...trackArray]);\n  }\n\n  const deleteSeed = (trackArray, trackToBeDeleted) => {\n    trackArray = _.without(trackArray, trackToBeDeleted);\n    setSeedTracks([...trackArray]);\n  }\n\n  const updateRecommendations = (trackArray, newTrack) => {\n    trackArray.push(newTrack);\n    setRecommendations([...trackArray]);\n  }\n\n  const deleteRecommendation = (trackArray, trackToBeDeleted) => {\n    trackArray = _.without(trackArray, trackToBeDeleted);\n    setRecommendations([...trackArray]);\n  }\n\n  const clearRecommendations = (trackArray) => {\n    let length = recommendations.length;\n    for(let i = 0; i < length; i++){\n      trackArray.pop();\n    }\n    setRecommendations([...trackArray]);\n  }\n\n  function checkForToken(){\n      if(Cookies.get(token_key) == undefined || Cookies.get(token_key) == null){\n        return false;\n      }\n      else{\n        return true;\n      }\n  }\n  function updateHasLoggedIn(){\n    if(Cookies.get(token_key) == undefined || Cookies.get(token_key) == null){\n      setHasLoggedIn(false);\n    }\n    else{\n      setHasLoggedIn(true);\n    }\n  }\n\n  function getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  function setCookie(){\n      Cookies.remove(token_key);\n      var params = getHashParams();\n      if(params.access_token != null && params.access_token != ''){\n          Cookies.set(token_key, params.access_token, { expires: 3599/86400 }) //set the cookie to expire after 59 min and 59 sec \n      }\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  function generateBackground(){\n    if(background == \"\"){\n      let randomNumber = getRandomInt(10);\n      let backgroundClassname = \"App-background\" + randomNumber.toString();\n      console.log(backgroundClassname);\n      setBackground(backgroundClassname);\n    }\n    return background;\n  }\n\n  useEffect(() => {\n    if(!hasLoggedIn){\n      Cookies.remove(token_key);\n    }\n    updateHasLoggedIn();\n    var params = getHashParams();\n    let bool = false;\n    if(params.access_token != null && params.access_token != ''){\n      bool = true;\n      \n    }\n    if(checkForToken() == false && bool == true){\n      setCookie();\n    }\n    updateHasLoggedIn();\n    console.log(hasLoggedIn);\n  }, []);\n  \n  const content = (\n    <header className=\"App-header\">\n      <div class=\"w-11/12\">\n          <Welcome  hasLoggedIn={hasLoggedIn}/>\n          <SearchTrack seedTracks={seedTracks} updateSeeds={updateSeeds}/>\n          <DisplaySeeds seedTracks={seedTracks} deleteSeed={deleteSeed}/>\n          <DisplayRecommendations seedTracks={seedTracks} recommendations={recommendations} updateRecommendations={updateRecommendations} deleteRecommendation={deleteRecommendation} clearRecommendations={clearRecommendations}/>\n          <CreatePlaylist seedTracks={seedTracks} recommendations={recommendations}/>\n        </div>\n      </header>\n  );\n\n\n  return (\n    <div className=\"App\">\n      <div className={generateBackground()}>\n        {content}\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","/Users/blainehill/Desktop/Arcane/ui/src/Welcome.js",["49","50","51","52","53","54","55"],"import React, {  useEffect } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport music_note from \"./assets/music.png\"\n\n\nfunction Welcome({ hasLoggedIn }){\n\n    const token_key = 'arcane-token-key';\n\n    let url;\n    if (process.env.NODE_ENV == \"production\") {\n        url = \"/api/login\";\n    } else {\n        url = \"http://localhost:3001/api/login\";\n    }\n    \n    return(\n        //we will have a logout button at the top when we're logged in and we will remove the login and introductory information once we are logged in\n        <div class=\"p-2 mx-auto my-auto\">\n            <div class=\"flex flex-auto flex-column flex center mx-auto my-auto p-4\">\n                <div class=\"flex flex-auto flex-row flex-wrap flex-center mx-auto my-4 px-4 py-4 ring ring-transparent rounded-lg bg-green-700\">\n                    <img src={music_note}/>\n                    <h4>Welcome to Arcane!</h4>\n                    <img src={music_note}/>\n                    <br />\n                </div>\n                <br />\n                <small class=\"text-muted text-center my-10\">Here's how it works: login with your Spotify account. Then, select up to five of your favorite songs to be the seeds for your curated mix. Then plug in some headphones and enjoy your own Arcane experience!</small>\n                <br />\n            </div>\n            { hasLoggedIn ?\n                <div></div>\n                :\n                <a href={url}>\n                    <Button class=\"bg-gray-800\" variant=\"secondary btn-lg\">\n                        Log in with Spotify!\n                    </Button>\n                </a>\n            }\n        </div>\n    );\n}\n\n\nexport default Welcome;","/Users/blainehill/Desktop/Arcane/ui/src/CreatePlaylist.js",["56","57","58"],"import React from \"react\";\nimport $ from 'jquery';\nimport { Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\n\n\nconst CreatePlaylist= ({ seedTracks, recommendations }) => {\n\n    function generatePlaylist(seedTrack_names, recommendation_ids, token_key) {\n        \n        let requestData = {\n            seedTrack_names: seedTrack_names,\n            token: Cookies.get(token_key)\n        };\n\n        let url;\n        if (process.env.NODE_ENV == \"production\") {\n            url = \"/api/createPlaylist\";\n        } else {\n            url = \"http://localhost:3001/api/createPlaylist\";\n        }\n\n        $.ajax({\n            url: url,\n            dataType : 'json',\n            data: requestData,\n            type: \"GET\"\n        }).done(function (response) {\n            if (responseIsSuccess(response)) {\n\n                let url2;\n                if (process.env.NODE_ENV == \"production\") {\n                    url2 = \"/api/addTracks\";\n                } else {\n                    url2 = \"http://localhost:3001/api/addTracks\";\n                }\n\n\n                let requestData2 ={\n                    recommendation_ids: recommendation_ids,\n                    playlist_id: response.data,\n                    token: Cookies.get(token_key)\n                }\n                console.log(response.data);\n\n                $.ajax({\n                    url: url2,\n                    dataType : 'json',\n                    data: requestData2,\n                    type: \"GET\"\n                }).done(function(){\n                    alert(\"Check out Spotify for your new Arcane Mix!\");\n                })\n            }\n        });\n    }\n\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        // if unauthorized we need to prompt log in\n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n\n\n    return(\n        <div>\n            { recommendations.length > 0 &&\n            <div>\n                <br />\n                <Button class=\"bg-gray-800\" variant=\"secondary btn-lg\" onClick={() => generatePlaylist(seedTracks.map( track => track.artists[0].name), recommendations.map( track => track.id), 'arcane-token-key')}>\n                    Create Playlist!\n                </Button>\n                <br />\n                <br />\n            </div>\n            }       \n        </div>\n        );\n}\n\nexport default CreatePlaylist;","/Users/blainehill/Desktop/Arcane/ui/src/DisplayRecommendations.js",["59","60","61"],"\nimport React from \"react\";\nimport $ from 'jquery';\nimport { Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\n\n\nconst DisplayRecommendations = ({ seedTracks, recommendations, updateRecommendations, deleteRecommendation, clearRecommendations }) => {\n\n    function generateRecommendations(seedTracks, token_key) {\n        \n        let requestData = {\n            limit: \"25\",\n            seed_tracks: seedTracks,\n            token: Cookies.get(token_key)\n        };\n\n        let url;\n        if (process.env.NODE_ENV == \"production\") {\n            url = \"/api/recommendations\";\n        } else {\n            url = \"http://localhost:3001/api/recommendations\";\n        }\n\n        $.ajax({\n            url: url,\n            dataType : 'json',\n            data: requestData,\n            type: \"POST\"\n        }).done(function (data) {\n            if (responseIsSuccess(data)) {\n                if(recommendations.length > 0){\n                    clearRecommendations(recommendations);\n                }\n                data.trackResult.tracks.forEach((track) => {updateRecommendations(recommendations, track);});\n            }\n        });\n    }\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        \n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n    return(\n        <div>\n            {seedTracks.length > 0 &&\n                <div>\n                    <div>\n                        <br />\n                        <Button class=\"bg-gray-800\" variant=\"secondary btn-lg\" onClick={() => generateRecommendations(seedTracks.map( track => track.id), 'arcane-token-key')}>\n                            Get Recommendations!\n                        </Button>\n                        <br />\n                        <br />\n                    </div>\n                    <div>\n                        { recommendations.length > 0 &&\n                            <div class=\"flex flex-row flex-wrap mx-8 my-4 px-4 py-4 ring ring-transparent rounded-lg bg-green-700\">\n                            {recommendations.map((track) => {\n                                return(\n                                    <div class=\"container mx-auto w-1/2 lg:w-1/5 md:w-1/3 p-3\">\n                                        <button class=\"object-cover w-full h-full p-4 ring ring-transparent rounded-lg bg-green-800 hover:bg-blue-500 active:bg-indigo-800\" key={track.id}  onClick={() => deleteRecommendation(recommendations, track)}>   \n                                            <img src={track.album.images[0].url} />\n                                            <p class=\"text-xs sm:text-sm md:text-base lg:text-lg\">{track.name} <br /> <i>by {track.artists[0].name}</i></p>\n                                        </button>\n                                        <br />\n                                    </div>\n                                    );\n                                })}\n                        </div>\n                        }\n                    </div>\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default DisplayRecommendations;","/Users/blainehill/Desktop/Arcane/ui/src/DisplaySeeds.js",["62","63","64"],"import React from \"react\";\nimport $ from 'jquery';\n\nconst DisplaySeeds = ({ seedTracks, deleteSeed }) => {\n    \n    return(\n        <div>\n            {seedTracks.length > 0 &&\n                <div>\n                    <br />\n                    Your Seeds are:\n                    <br />\n                    <div class=\"flex flex-row flex-wrap mx-8 my-4 px-4 py-4 ring ring-transparent rounded-lg bg-green-700\">\n                        {seedTracks.map((seedTrack) => {\n                            return(\n                                <div class=\"container mx-auto w-1/2 lg:w-1/5 md:w-1/3 p-3 h-full\" key={seedTrack.id} id=\"heightgrabber\">\n                                    <button name={seedTrack.name} class=\"object-cover w-full h-full p-4 ring ring-transparent rounded-lg bg-green-800 hover:bg-blue-500 active:bg-indigo-800\" onClick={() => deleteSeed(seedTracks, seedTrack)}>\n                                        <img src={seedTrack.album.images[0].url} />\n                                        <p class=\"text-xs sm:text-sm md:text-base lg:text-lg\">{seedTrack.name} <br /> <i>by {seedTrack.artists[0].name}</i></p>\n                                    </button>\n                                </div>\n                            );\n                            })}\n                            {[...Array(5-(seedTracks.length || 0))].map((i) =>{\n                                return(\n                                    <div class=\"container mx-auto w-1/2 lg:w-1/5 md:w-1/3 p-3\" key={i}>\n                                        <div class=\"object-cover w-full h-full p-4 ring ring-transparent rounded-lg min-h:full bg-green-800\">\n                                            <div>\n                                                <img class=\"opacity-0\" src={seedTracks[0].album.images[0].url} />\n                                                <p class=\"text-green-800 text-xs sm:text-sm md:text-base lg:text-lg\">{seedTracks[0].name} <br /> <i>by {seedTracks[0].artists[0].name}</i></p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\nexport default DisplaySeeds;","/Users/blainehill/Desktop/Arcane/ui/src/SearchTrack.js",["65","66","67","68","69","70","71","72","73","74","75"],"  \nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport $ from 'jquery';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\nimport DisplayRecommendations from \"./DisplayRecommendations\";\nimport { forEach } from 'core-js/es/array';\n\n\nconst SearchTrack = ({ seedTracks, updateSeeds}) => {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [trackQuery, setTrackQuery] = useState('');\n    const [tracks, setTracks] = useState([]);\n    const [searched, setSearched] = useState(false);\n\n    function handleChange(event) {\n        setTrackQuery({...trackQuery, [event.target.name]: event.target.value})\n    }\n\n    const onSubmit = () => {\n        setSearched(true);\n        searchTrackByName(trackQuery.query, 'arcane-token-key');\n    }\n\n    function searchTrackByName(track_name, token_key) {\n\n        let url;\n        if (process.env.NODE_ENV == \"production\") {\n            url = \"/api/trackSearch\";\n        } else {\n            url = \"http://localhost:3001/api/trackSearch\";\n        }\n\n        $.ajax({\n            url: url,\n            data: {\n                track_value: track_name,\n                token: Cookies.get(token_key),\n                limit: \"5\",\n                type: \"GET\"\n            }\n        }).done(function (data) {\n            if (responseIsSuccess(data)) {\n                setTracks(data.trackResult.tracks.items);\n            }\n        });\n    }\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        // if unauthorized we need to prompt log in\n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n    function addTracktoSeeds(track){\n        let isDuplicate = false;\n        seedTracks.forEach((seedTrack) => {if(seedTrack.id == track.id){\n            isDuplicate = true;\n        }});\n        if(seedTracks.length < 5 && isDuplicate == false){\n            updateSeeds(seedTracks, track);\n        }\n        \n        \n    }\n\n\n    return(\n        <div>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"flex flex-col m-10\">\n                    <Form.Label class=\"py-1\">Search for your top tracks:</Form.Label>\n                    <Form.Text className=\"text-muted py-1\">\n                        Select a track below to add it to your recommendation seeds\n                    </Form.Text>\n\n                    <InputGroup className=\"mb-3\">\n                        <Form.Control required id=\"validationTrack\" class=\"p-12\" name=\"query\" placeholder=\"Enter track name\" defaultValue={''} autoComplete=\"on\" onChange={handleChange}/>\n                        <InputGroup.Append>\n                        <Button class=\"bg-gray-800\" type=\"submit\" defaultValue=\"Submit\" variant=\"secondary\">Submit</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </div>\n            </Form>\n            \n            {searched == true && \n                <div class=\"flex flex-row flex-wrap mx-8 my-4 px-4 py-4 ring ring-transparent rounded-lg bg-green-700\">\n                    {tracks.map((track) => {\n                        return(\n                            <div class=\"container mx-auto w-1/2 lg:w-1/5 md:w-1/3 p-3\">\n                                <button class=\"object-cover w-full h-full p-4 ring ring-transparent rounded-lg bg-green-800 hover:bg-blue-500 active:bg-indigo-800\" key={track.id} onClick={() => addTracktoSeeds(track)} name={track.name}>   \n                                    <img src={track.album.images[0].url} />\n                                    <p class=\"text-xs sm:text-sm md:text-base lg:text-lg\">{track.name} <br /> <i>by {track.artists[0].name}</i></p>\n                                </button>\n                            </div>\n                            );\n                        })}\n                </div>\n            }\n        </div>\n\n    );\n}\n\n\nexport default SearchTrack;\n\n//flex flex-row flex-wrap mx-8 my-4 px-4 py-4 ring rounded-lg bg-green-700\n//mx-auto w-1/5 p-3",{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":9},{"ruleId":"76","severity":1,"message":"80","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":52,"column":33,"nodeType":"84","messageId":"85","endLine":52,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":60,"column":31,"nodeType":"84","messageId":"85","endLine":60,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":72,"column":13,"nodeType":"88","messageId":"89","endLine":72,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":81,"column":61,"nodeType":"84","messageId":"85","endLine":81,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":91,"column":19,"nodeType":"84","messageId":"85","endLine":91,"endColumn":21},{"ruleId":"82","severity":1,"message":"90","line":107,"column":59,"nodeType":"84","messageId":"85","endLine":107,"endColumn":61},{"ruleId":"82","severity":1,"message":"83","line":111,"column":24,"nodeType":"84","messageId":"85","endLine":111,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":111,"column":41,"nodeType":"84","messageId":"85","endLine":111,"endColumn":43},{"ruleId":"91","severity":1,"message":"92","line":116,"column":6,"nodeType":"93","endLine":116,"endColumn":8,"suggestions":"94"},{"ruleId":"76","severity":1,"message":"95","line":1,"column":18,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"96","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"97","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":15},{"ruleId":"76","severity":1,"message":"98","line":10,"column":11,"nodeType":"78","messageId":"79","endLine":10,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":13,"column":30,"nodeType":"84","messageId":"85","endLine":13,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":24,"column":21,"nodeType":"101","endLine":24,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":26,"column":21,"nodeType":"101","endLine":26,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":17,"column":34,"nodeType":"84","messageId":"85","endLine":17,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":32,"column":42,"nodeType":"84","messageId":"85","endLine":32,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":69,"column":38,"nodeType":"84","messageId":"85","endLine":69,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":19,"column":34,"nodeType":"84","messageId":"85","endLine":19,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":50,"column":38,"nodeType":"84","messageId":"85","endLine":50,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":81,"column":45,"nodeType":"101","endLine":81,"endColumn":84},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":9},{"ruleId":"99","severity":1,"message":"100","line":18,"column":41,"nodeType":"101","endLine":18,"endColumn":84},{"ruleId":"99","severity":1,"message":"100","line":29,"column":49,"nodeType":"101","endLine":29,"endColumn":114},{"ruleId":"76","severity":1,"message":"102","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":30},{"ruleId":"76","severity":1,"message":"103","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":17},{"ruleId":"76","severity":1,"message":"104","line":13,"column":13,"nodeType":"78","messageId":"79","endLine":13,"endColumn":21},{"ruleId":"76","severity":1,"message":"105","line":13,"column":37,"nodeType":"78","messageId":"79","endLine":13,"endColumn":42},{"ruleId":"76","severity":1,"message":"106","line":13,"column":44,"nodeType":"78","messageId":"79","endLine":13,"endColumn":50},{"ruleId":"82","severity":1,"message":"83","line":30,"column":34,"nodeType":"84","messageId":"85","endLine":30,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":61,"column":38,"nodeType":"84","messageId":"85","endLine":61,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":75,"column":60,"nodeType":"84","messageId":"85","endLine":75,"endColumn":62},{"ruleId":"82","severity":1,"message":"83","line":78,"column":49,"nodeType":"84","messageId":"85","endLine":78,"endColumn":51},{"ruleId":"82","severity":1,"message":"83","line":104,"column":23,"nodeType":"84","messageId":"85","endLine":104,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":110,"column":37,"nodeType":"101","endLine":110,"endColumn":76},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'hallowed_background' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hasLoggedIn' and 'setCookie'. Either include them or remove the dependency array.","ArrayExpression",["107"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'Cookies' is defined but never used.","'token_key' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DisplayRecommendations' is defined but never used.","'forEach' is defined but never used.","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.",{"desc":"108","fix":"109"},"Update the dependencies array to be: [hasLoggedIn, setCookie]",{"range":"110","text":"111"},[3203,3205],"[hasLoggedIn, setCookie]"]