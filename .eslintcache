[{"/Users/blainehill/Desktop/Arcane/src/index.js":"1","/Users/blainehill/Desktop/Arcane/src/App.js":"2","/Users/blainehill/Desktop/Arcane/src/DisplaySeeds.js":"3","/Users/blainehill/Desktop/Arcane/src/Welcome.js":"4","/Users/blainehill/Desktop/Arcane/src/DisplayRecommendations.js":"5","/Users/blainehill/Desktop/Arcane/src/SearchTrack.js":"6","/Users/blainehill/Desktop/Arcane/src/CreatePlaylist.js":"7"},{"size":393,"mtime":1614222748346,"results":"8","hashOfConfig":"9"},{"size":2103,"mtime":1620377478174,"results":"10","hashOfConfig":"9"},{"size":1646,"mtime":1620430800037,"results":"11","hashOfConfig":"9"},{"size":2668,"mtime":1620430808586,"results":"12","hashOfConfig":"9"},{"size":3154,"mtime":1620428961346,"results":"13","hashOfConfig":"9"},{"size":3803,"mtime":1620428958885,"results":"14","hashOfConfig":"9"},{"size":2354,"mtime":1620428972073,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1g77jk1",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},"/Users/blainehill/Desktop/Arcane/src/index.js",["36","37"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["38","39"],"/Users/blainehill/Desktop/Arcane/src/App.js",["40","41"],"import React, { useEffect, useState } from \"react\";\nimport Welcome from './Welcome';\nimport SearchTrack from './SearchTrack';\nimport DisplaySeeds from './DisplaySeeds';\nimport DisplayRecommendations from './DisplayRecommendations';\nimport CreatePlaylist from './CreatePlaylist'\nimport Cookies from \"js-cookie\";\nvar _ = require('underscore');\n\n\n\n\nfunction App() {\n\n  const[seedTracks, setSeedTracks] = useState([]);\n  const[recommendations, setRecommendations] = useState([]);\n  const token_key = 'arcane-token-key';\n  const[hasLoggedIn, setHasLoggedIn] = useState(false);\n\n  const updateSeeds = (trackArray, newTrack) => {\n    trackArray.push(newTrack);\n    setSeedTracks([...trackArray]);\n  }\n\n  const deleteSeed = (trackArray, trackToBeDeleted) => {\n    trackArray = _.without(trackArray, trackToBeDeleted);\n    setSeedTracks([...trackArray]);\n  }\n\n  const updateRecommendations = (trackArray, newTrack) => {\n    trackArray.push(newTrack);\n    setRecommendations([...trackArray]);\n  }\n\n  const deleteRecommendation = (trackArray, trackToBeDeleted) => {\n    trackArray = _.without(trackArray, trackToBeDeleted);\n    setRecommendations([...trackArray]);\n  }\n\n  function checkForToken(){\n    if(Cookies.get(token_key) == undefined || Cookies.get(token_key) == null){\n        setHasLoggedIn(false);\n    }\n    else{\n      setHasLoggedIn(true);\n    }\n}\n\n  useEffect(() => {\n    checkForToken();\n    console.log(hasLoggedIn);\n    return hasLoggedIn;\n  }, []);\n  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div class=\"w-11/12\">\n          <Welcome  hasLoggedIn={hasLoggedIn}/>\n          <SearchTrack seedTracks={seedTracks} updateSeeds={updateSeeds} />\n          <DisplaySeeds seedTracks={seedTracks} deleteSeed={deleteSeed}/>\n          <DisplayRecommendations seedTracks={seedTracks} recommendations={recommendations} updateRecommendations={updateRecommendations} deleteRecommendation={deleteRecommendation}/>\n          <CreatePlaylist seedTracks={seedTracks} recommendations={recommendations}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/blainehill/Desktop/Arcane/src/DisplaySeeds.js",["42"],"/Users/blainehill/Desktop/Arcane/src/Welcome.js",["43","44","45","46"],"/Users/blainehill/Desktop/Arcane/src/DisplayRecommendations.js",["47","48"],"import React from \"react\";\nimport $ from 'jquery';\nimport { Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\n\n\nconst DisplayRecommendations = ({ seedTracks, recommendations, updateRecommendations, deleteRecommendation }) => {\n\n    function generateRecommendations(seedTracks, token_key) {\n        \n        let requestData = {\n            limit: \"25\",\n            seed_tracks: seedTracks,\n            token: Cookies.get(token_key)\n        };\n\n        $.ajax({\n            url: \"/recommendations\",\n            dataType : 'json',\n            data: requestData,\n            type: \"POST\"\n        }).done(function (data) {\n            if (responseIsSuccess(data)) {\n                data.trackResult.tracks.forEach((track) => {updateRecommendations(recommendations, track);});\n            }\n        });\n    }\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        // if unauthorized we need to prompt log in\n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n    return(\n        <div>\n            {seedTracks.length > 0 &&\n                <div>\n                    <div>\n                        <br />\n                        <Button class=\"bg-gray-800\" variant=\"secondary btn-lg\" onClick={() => generateRecommendations(seedTracks.map( track => track.id), 'arcane-token-key')}>\n                            Get Recommendations!\n                        </Button>\n                        <br />\n                        <br />\n                    </div>\n                    <div>\n                        { recommendations.length > 0 &&\n                            <div class=\"flex flex-row flex-wrap mx-16 my-4 px-4 py-4 ring rounded-lg\">\n                            {recommendations.map((track) => {\n                                return(\n                                    <div class=\"container mx-auto w-1/5 p-3\">\n                                        <button class=\"object-cover w-auto h-auto p-3 ring rounded-lg hover:bg-blue-500 active:bg-green-800\" key={track.id}  onClick={() => deleteRecommendation(recommendations, track)}>   \n                                            <img src={track.album.images[0].url} />\n                                            <p class=\"text-base md:text-lg sm:text-sm\">{track.name} <br /> <i>by {track.artists[0].name}</i></p>\n                                        </button>\n                                        <br />\n                                    </div>\n                                    );\n                                })}\n                        </div>\n                        }\n                    </div>\n\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default DisplayRecommendations;","/Users/blainehill/Desktop/Arcane/src/SearchTrack.js",["49","50","51","52","53"],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport $ from 'jquery';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\n\n\nconst SearchTrack = ({ seedTracks, updateSeeds }) => {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [trackQuery, setTrackQuery] = useState('');\n    const [tracks, setTracks] = useState([]);\n    const [searched, setSearched] = useState(false);\n\n    function handleChange(event) {\n        setTrackQuery({...trackQuery, [event.target.name]: event.target.value})\n    }\n\n    const onSubmit = () => {\n        setSearched(true);\n        searchTrackByName(trackQuery.query, 'arcane-token-key');\n    }\n\n    function searchTrackByName(track_name, token_key) {\n\n        $.ajax({\n            url: \"/trackSearch\",\n            data: {\n                track_value: track_name,\n                token: Cookies.get(token_key),\n                limit: \"5\",\n                type: \"GET\"\n            }\n        }).done(function (data) {\n            if (responseIsSuccess(data)) {\n                setTracks(data.trackResult.tracks.items);\n            }\n        });\n    }\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        // if unauthorized we need to prompt log in\n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n    function addTracktoSeeds(track){\n        if(seedTracks.length < 5){\n            updateSeeds(seedTracks, track);\n        }\n        \n        \n    }\n\n\n    return(\n        <div>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"flex flex-col m-10\">\n                    <Form.Label class=\"py-1\">Search for your top tracks:</Form.Label>\n                    <Form.Text className=\"text-muted py-1\">\n                        Select a track below to add it to your recommendation seeds\n                    </Form.Text>\n\n                    <InputGroup className=\"mb-3\">\n                        <Form.Control required id=\"validationTrack\" class=\"p-12\" name=\"query\" placeholder=\"Enter track name\" defaultValue={''} autoComplete=\"on\" onChange={handleChange} ref={register({minLength: 2})}/>\n                        <InputGroup.Append>\n                        <Button class=\"bg-gray-800\" type=\"submit\" defaultValue=\"Submit\" variant=\"secondary\">Submit</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </div>\n            </Form>\n            \n            {searched == true && \n                <div class=\"flex flex-row flex-wrap mx-8 my-4 px-4 py-4 ring rounded-lg\">\n                    {tracks.map((track) => {\n                        return(\n                            <div class=\"container mx-auto w-1/5 p-3\">\n                                <button class=\"object-cover w-full h-full p-4 ring rounded-lg hover:bg-blue-500 active:bg-green-800\" key={track.id} onClick={() => addTracktoSeeds(track)} name={track.name}>   \n                                    <img src={track.album.images[0].url} />\n                                    <p>{track.name} <br /> <i>by {track.artists[0].name}</i></p>\n                                </button>\n                            </div>\n                            );\n                        })}\n                </div>\n            }\n        </div>\n\n    );\n}\n\n\nexport default SearchTrack;","/Users/blainehill/Desktop/Arcane/src/CreatePlaylist.js",["54"],"import React from \"react\";\nimport $ from 'jquery';\nimport { Button } from 'react-bootstrap';\nimport Cookies from \"js-cookie\";\n\n\nconst CreatePlaylist= ({ seedTracks, recommendations }) => {\n\n    function generatePlaylist(seedTrack_names, recommendation_ids, token_key) {\n        \n        let requestData = {\n            seedTrack_names: seedTrack_names,\n            token: Cookies.get(token_key)\n        };\n\n        $.ajax({\n            url: \"/createPlaylist\",\n            dataType : 'json',\n            data: requestData,\n            type: \"GET\"\n        }).done(function (response) {\n            if (responseIsSuccess(response)) {\n\n                let requestData2 ={\n                    recommendation_ids: recommendation_ids,\n                    playlist_id: response.data,\n                    token: Cookies.get(token_key)\n                }\n\n                $.ajax({\n                    url: \"/addTracks\",\n                    dataType : 'json',\n                    data: requestData2,\n                    type: \"GET\"\n                }).done(function(response2){\n                    alert(\"Check out Spotify for your new Arcane Mix!\");\n                })\n            }\n        });\n    }\n\n\n    function responseIsSuccess(data) {\n        var error;\n        if (data && data.status.error == null) {\n            error = data.status;\n        } else {\n            error = data.status.error.response.status || \"401\";\n        }\n\n        var msg = data.message;\n        // if unauthorized we need to prompt log in\n        if (error && parseInt(error) == 401) {\n            alert(msg);\n            return false;\n        }\n        if (error && error >= 400) {\n            console.log(msg);\n            alert(msg || \"Error: Please try logging in and out again.\");\n            return false;\n        }\n        return true;\n    }\n\n\n\n    return(\n        <div>\n            { recommendations.length > 0 &&\n            <div>\n                <br />\n                <Button class=\"bg-gray-800\" variant=\"secondary btn-lg\" onClick={() => generatePlaylist(seedTracks.map( track => track.artists[0].name), recommendations.map( track => track.id), 'arcane-token-key')}>\n                    Create Playlist!\n                </Button>\n                <br />\n                <br />\n            </div>\n            }       \n        </div>\n        );\n}\n\nexport default CreatePlaylist;",{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":9},{"ruleId":"55","severity":1,"message":"59","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":41,"column":31,"nodeType":"66","messageId":"67","endLine":41,"endColumn":33},{"ruleId":"68","severity":1,"message":"69","line":53,"column":6,"nodeType":"70","endLine":53,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":17,"column":41,"nodeType":"74","endLine":17,"endColumn":84},{"ruleId":"75","severity":1,"message":"76","line":16,"column":17,"nodeType":"77","messageId":"78","endLine":16,"endColumn":30},{"ruleId":"64","severity":1,"message":"79","line":25,"column":63,"nodeType":"66","messageId":"67","endLine":25,"endColumn":65},{"ruleId":"72","severity":1,"message":"73","line":50,"column":21,"nodeType":"74","endLine":50,"endColumn":60},{"ruleId":"72","severity":1,"message":"73","line":52,"column":21,"nodeType":"74","endLine":52,"endColumn":60},{"ruleId":"64","severity":1,"message":"65","line":39,"column":38,"nodeType":"66","messageId":"67","endLine":39,"endColumn":40},{"ruleId":"72","severity":1,"message":"73","line":70,"column":45,"nodeType":"74","endLine":70,"endColumn":84},{"ruleId":"55","severity":1,"message":"80","line":10,"column":37,"nodeType":"57","messageId":"58","endLine":10,"endColumn":42},{"ruleId":"55","severity":1,"message":"81","line":10,"column":44,"nodeType":"57","messageId":"58","endLine":10,"endColumn":50},{"ruleId":"64","severity":1,"message":"65","line":51,"column":38,"nodeType":"66","messageId":"67","endLine":51,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":90,"column":23,"nodeType":"66","messageId":"67","endLine":90,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":96,"column":37,"nodeType":"74","endLine":96,"endColumn":76},{"ruleId":"64","severity":1,"message":"65","line":53,"column":38,"nodeType":"66","messageId":"67","endLine":53,"endColumn":40},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hasLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [hasLoggedIn]",{"range":"87","text":"88"},[1450,1452],"[hasLoggedIn]"]